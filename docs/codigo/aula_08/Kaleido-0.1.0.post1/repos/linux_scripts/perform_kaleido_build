# Copy kaleido/kaleido.cc to src/headless/app/kaleido.cc
rm -rf headless/app/scopes
cp -r /repos/kaleido/cc/* headless/app/

# Perform build, result will be out/Kaleido_linux_$KALEIDO_ARCH/kaleido
ninja -C out/Kaleido_linux_$KALEIDO_ARCH -j 16 kaleido


## First build up kaledo_minimal directory with core kaleido files
mkdir -p /repos/build/kaleido_minimal/
rm -rf /repos/build/kaleido_minimal/*

mkdir -p /repos/build/kaleido_minimal/bin
cp out/Kaleido_linux_$KALEIDO_ARCH/kaleido /repos/build/kaleido_minimal/bin
cp -r out/Kaleido_linux_$KALEIDO_ARCH/swiftshader/ /repos/build/kaleido_minimal/bin

# version
cp /repos/kaleido/version /repos/build/kaleido_minimal/

# license
cp /repos/kaleido/LICENSE.txt /repos/build/kaleido_minimal/
cp /repos/kaleido/README.md /repos/build/kaleido_minimal/
cp /repos/CREDITS.html /repos/build/kaleido_minimal/

# Copy javascript
pushd /repos/kaleido/js/
mkdir -p build/
npm install
npm run clean
npm run build
popd

mkdir -p /repos/build/kaleido_minimal/js/
cp /repos/kaleido/js/build/*.js /repos/build/kaleido_minimal/js/

## Copy kaleido_minimal/ directory to kaleido/, where we'll add vendored libraries
rm -rf /repos/build/kaleido
cp -r /repos/build/kaleido_minimal/ /repos/build/kaleido/

# copy shared libraries
mkdir -p /repos/build/kaleido/lib/

if [ $KALEIDO_ARCH == "x64" ]; then
  # /usr/lib/x86_64-linux-gnu/
  for SO_FILE in libnss3.so libnssutil3.so libnspr4.so libplc4.so libplds4.so libsqlite3.so.0
  do
    cp /usr/lib/x86_64-linux-gnu/$SO_FILE /repos/build/kaleido/lib/$SO_FILE
  done

  # /usr/lib/x86_64-linux-gnu/nss
  cp /usr/lib/x86_64-linux-gnu/nss/* /repos/build/kaleido/lib/

  # /lib/x86_64-linux-gnu/
  for SO_FILE in libexpat.so.1 # libdl.so.2 libpthread.so.0 librt.so.1 libm.so.6 libgcc_s.so.1 libc.so.6
  do
    cp /lib/x86_64-linux-gnu/$SO_FILE /repos/build/kaleido/lib/$SO_FILE
  done

elif [ $KALEIDO_ARCH == "arm64" ]; then
    # /usr/lib/aarch64-linux-gnu/
  for SO_FILE in libnss3.so libnssutil3.so libnspr4.so libplc4.so libplds4.so libsqlite3.so.0
  do
    cp /repos/src/build/linux/debian_sid_arm64-sysroot/usr/lib/aarch64-linux-gnu/$SO_FILE /repos/build/kaleido/lib/$SO_FILE
  done

  # /usr/lib/aarch64-linux-gnu/nss
  cp /repos/src/build/linux/debian_sid_arm64-sysroot/usr/lib/aarch64-linux-gnu/nss/* /repos/build/kaleido/lib/

fi

# fonts
mkdir -p /repos/build/kaleido/etc/
cp -r /etc/fonts/ /repos/build/kaleido/etc/fonts
mkdir -p /repos/build/kaleido/xdg
cp -r /usr/share/fonts/ /repos/build/kaleido/xdg/

# Add full launch script
cp /repos/linux_scripts/launch_script /repos/build/kaleido/kaleido

# Add minimal launch script
cp /repos/linux_scripts/minimal_launch_script /repos/build/kaleido_minimal/kaleido

# Build python wheel
python3 -m pip install -U setuptools
cd /repos/kaleido/py/
rm -rf ./dist
python3 setup.py package

if [ $KALEIDO_ARCH == "x64" ]; then
  python3 setup.py package_source
fi